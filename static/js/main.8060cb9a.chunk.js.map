{"version":3,"sources":["VaccineDataContext.js","Beep.js","data.ts","CityDropdown.js","DateField.js","VaccineSlots.js","App.js","index.js"],"names":["VaccineDataContext","React","createContext","getData","url","Promise","resolve","reject","fetch","then","resp","json","data","error","initialState","startDate","Date","toLocaleDateString","replace","cities","shouldBeep","startBipping","startMonitoring","isFetching","countdown","slots","lastChecked","pincodeToFilter","pincodeTextField","isError","getInitialData","JSON","parse","window","localStorage","getItem","exp","VaccineProvider","props","countDownTimerRef","useRef","useSetState","state","setState","useEffect","stopCountDown","setItem","stringify","setDataToLocalStorage","arrPincode","split","map","pincode","pc","parseInt","trim","isNaN","filter","length","startCountDown","current","setInterval","prevState","clearInterval","alert","responses","forEach","city","checkDate","date","getStartDate","i","dateStr","apiUrl","push","setDate","getDate","all","cityCalendar","slot","sessions","session","min_age_limit","available_capacity","includes","CHECK_SLOTS_EVERY_SECONDS","toLocaleTimeString","dateParts","Provider","value","children","Beep","useContext","timer","count","Audio","play","type","id","name","checked","onChange","event","target","htmlFor","CityDropdown","selectedCities","cityObj","cityName","multiple","e","Array","from","selectedOptions","option","style","color","join","width","val","DateField","VaccineSlots","onClick","block_name","district_name","vaccine","App","href","maxWidth","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8060cb9a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useRaf, useSetState, useWindowSize } from \"react-use\";\n\nexport const CHECK_SLOTS_EVERY_SECONDS = 60;\n\nexport const VaccineDataContext = React.createContext();\n\nfunction getData(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then((resp) => resp.json())\n      .then(\n        (data) => resolve(data),\n        (error) => reject(error)\n      );\n  });\n}\n\nexport const apiUrlTemplate = (distId, checkDate) =>\n  `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=${distId}&date=${checkDate}`;\n\nconst initialState = {\n  startDate: new Date()\n    .toLocaleDateString(\"en-IN\")\n    .replace(\"/\", \"-\")\n    .replace(\"/\", \"-\"),\n  cities: [],\n  shouldBeep: true,\n  startBipping: false,\n  startMonitoring: false,\n  isFetching: false,\n  countdown: 0,\n  slots: [],\n  lastChecked: \"\",\n  pincodeToFilter: [],\n  pincodeTextField: \"\",\n  isError: false,\n};\n\nconst getInitialData = () => {\n  try {\n    return {\n      ...initialState,\n      ...JSON.parse(window.localStorage.getItem(\"vti.data\")),\n      countdown: 0,\n      startBipping: false,\n    };\n  } catch (exp) {\n    return initialState;\n  }\n};\n\nconst setDataToLocalStorage = ({\n  cities,\n  shouldBeep,\n  pincodeToFilter,\n  pincodeTextField,\n}) => {\n  try {\n    window.localStorage.setItem(\n      \"vti.data\",\n      JSON.stringify({ cities, shouldBeep, pincodeToFilter, pincodeTextField })\n    );\n  } catch (exp) {\n    return initialState;\n  }\n};\n\nexport const VaccineProvider = (props) => {\n  const countDownTimerRef = React.useRef();\n\n  const [state, setState] = useSetState(getInitialData);\n\n  React.useEffect(() => {\n    return stopCountDown;\n  }, []);\n\n  React.useEffect(() => {\n    startMonitoring();\n  }, [state.startMonitoring, state.countdown]);\n\n  React.useEffect(() => {\n    setDataToLocalStorage(state);\n  }, [\n    state.cities,\n    state.shouldBeep,\n    state.pincodeToFilter,\n    state.pincodeTextField,\n  ]);\n\n  React.useEffect(() => {\n    const arrPincode = state.pincodeTextField\n      ?.split(\",\")\n      .map((pincode) => {\n        const pc = parseInt(pincode.trim());\n        if (!isNaN(pc)) {\n          return pc;\n        }\n      })\n      .filter((pc) => pc) // filter undefined\n      .filter((pc) => `${pc}`.length === 6); // pincode length is 6\n    setState({ pincodeToFilter: arrPincode });\n  }, [state.pincodeTextField]);\n\n  const startCountDown = () => {\n    countDownTimerRef.current = setInterval(() => {\n      setState((prevState) => ({\n        countdown: prevState.countdown - 1,\n      }));\n    }, 1000);\n  };\n\n  const stopCountDown = () => {\n    clearInterval(countDownTimerRef.current);\n  };\n\n  const startMonitoring = () => {\n    if (state.startMonitoring) {\n      if (state.cities.length === 0) {\n        alert(\"Please select city\");\n        stopCountDown();\n        setState({ startMonitoring: false });\n        return;\n      }\n\n      if (state.countdown === 0) {\n        stopCountDown();\n        setState({ isFetching: true });\n        const responses = [];\n        state.cities.forEach((city) => {\n          const date = getStartDate();\n          for (let i = 0; i < 7; i++) {\n            const dateStr = date\n              .toLocaleDateString(\"en-IN\")\n              .replace(\"/\", \"-\")\n              .replace(\"/\", \"-\");\n            const apiUrl = apiUrlTemplate(city, dateStr);\n            responses.push(getData(apiUrl));\n            date.setDate(date.getDate() + 1);\n          }\n        });\n\n        Promise.all(responses).then(\n          (cityCalendar) => {\n            setState({\n              slots: cityCalendar\n                .map((slot) => ({\n                  sessions: slot.sessions.filter(\n                    (session) =>\n                      session.min_age_limit === 18 &&\n                      session.available_capacity > 0\n                  ),\n                }))\n                .map((slot) => ({\n                  sessions: slot.sessions.filter((session) => {\n                    if (\n                      state.pincodeToFilter.length === 0 ||\n                      !session.pincode\n                    ) {\n                      return true;\n                    }\n                    if (state.pincodeToFilter.includes(session.pincode)) {\n                      return true;\n                    }\n                    return false;\n                  }),\n                }))\n                .filter((slot) => slot.sessions.length > 0),\n              isFetching: false,\n              countdown:\n                window.CHECK_SLOTS_EVERY_SECONDS || CHECK_SLOTS_EVERY_SECONDS,\n              lastChecked: new Date().toLocaleTimeString(),\n              isError: false,\n            });\n            startCountDown();\n          },\n          () => {\n            setState({\n              slots: [],\n              isFetching: false,\n              countdown:\n                window.CHECK_SLOTS_EVERY_SECONDS || CHECK_SLOTS_EVERY_SECONDS,\n              lastChecked: new Date().toLocaleTimeString(),\n              isError: true,\n            });\n            startCountDown();\n          }\n        );\n      }\n    } else {\n      stopCountDown();\n      setState({ countdown: 0 });\n    }\n  };\n\n  const getStartDate = () => {\n    const dateParts = state.startDate.split(\"-\");\n    return new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);\n  };\n\n  return (\n    <VaccineDataContext.Provider value={{ state, setState }}>\n      {props.children}\n    </VaccineDataContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { VaccineDataContext } from \"./VaccineDataContext\";\n\nconst beepSound = () => {\n  var snd = new Audio(\n    \"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\"\n  );\n  snd.play();\n};\n\nexport const Beep = () => {\n  const { state, setState } = React.useContext(VaccineDataContext);\n  const { slots, shouldBeep } = state;\n\n  // if slots found then trigger beep sound\n  React.useEffect(() => {\n    let timer;\n    let count = 0;\n    if (shouldBeep && slots.length > 0) {\n      timer = setInterval(() => {\n        beepSound();\n        if (++count === 5) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [slots, shouldBeep]);\n\n  const onChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    setState({ shouldBeep: value });\n  };\n\n  return (\n    <p>\n      <input\n        type=\"checkbox\"\n        id=\"beep\"\n        name=\"beep\"\n        checked={state.shouldBeep}\n        onChange={onChange}\n      />\n      <label htmlFor=\"beep\">Beep on open slots</label>\n    </p>\n  );\n};\n","export const cities = [\n  { \"id\": \"622\", \"cityName\": \"Agra\" },\n  { \"id\": \"154\", \"cityName\": \"Ahmedabad\" },\n  { \"id\": \"265\", \"cityName\": \"Bangalore Urban\" },\n  { \"id\": \"571\", \"cityName\": \"Chennai\" },\n  { \"id\": \"140\", \"cityName\": \"Delhi, New\" },\n  { \"id\": \"149\", \"cityName\": \"Delhi, South\" },\n  { \"id\": \"145\", \"cityName\": \"Delhi, East\" },\n  { \"id\": \"142\", \"cityName\": \"Delhi, West\" },\n  { \"id\": \"146\", \"cityName\": \"Delhi, North\" },\n  { \"id\": \"307\", \"cityName\": \"Ernakulam, Kerala\" },\n  { \"id\": \"651\", \"cityName\": \"Gaziabad\" },\n  { \"id\": \"581\", \"cityName\": \"Hyderabad\" },\n  { \"id\": \"544\", \"cityName\": \"Kanyakumari\" },\n  { \"id\": \"725\", \"cityName\": \"Kolkotta\" },\n  { \"id\": \"596\", \"cityName\": \"Medchal, Telangana\" },\n  { \"id\": \"395\", \"cityName\": \"Mumbai\" },\n  { \"id\": \"266\", \"cityName\": \"Mysore\" },\n  { \"id\": \"650\", \"cityName\": \"Noida\" },\n  { \"id\": \"308\", \"cityName\": \"Palakkad, Kerala\" },\n  { \"id\": \"363\", \"cityName\": \"Pune\" },\n  { \"id\": \"173\", \"cityName\": \"Rajkot, Gujarat\" },\n  { \"id\": \"775\", \"cityName\": \"Rajkot Corporation, Gujarat\" },\n  { \"id\": \"603\", \"cityName\": \"Ranga Reddy, Telangana\" },\n  { \"id\": \"296\", \"cityName\": \"Thiruvananthapuram, Kerala\" },\n  { \"id\": \"167\", \"cityName\": \"Valsad, Gujarat\" }\n];\n","import React from \"react\";\nimport { cities } from \"./data\";\nimport { VaccineDataContext } from \"./VaccineDataContext\";\n\nexport const CityDropdown = () => {\n  const { state, setState } = React.useContext(VaccineDataContext);\n\n  const onSelectChange = (e) => {\n    let value = Array.from(e.target.selectedOptions, (option) => option.value);\n    setState({ cities: value });\n  };\n\n  const onPincodeChange = (e) => {\n    let val = e.target.value.trim();\n\n    setState({ pincodeTextField: val });\n  };\n\n  const selectedCities = cities\n    .filter((cityObj) => state.cities.includes(cityObj.id))\n    .map((cityObj) => cityObj.cityName);\n\n  return (\n    <div>\n      <select\n        name=\"city\"\n        id=\"city\"\n        multiple\n        value={state.cities}\n        onChange={onSelectChange}\n      >\n        {cities.map(({ id, cityName }) => (\n          <option key={id} value={id}>\n            {cityName}\n          </option>\n        ))}\n      </select>\n      <p>\n        <span style={{ color: \"#ff0080\" }}>\n          Selected {selectedCities.length > 1 ? \"Cities\" : \"City\"}:{\" \"}\n        </span>\n        {selectedCities.join(\" | \")}\n      </p>\n      <p>\n        Specific Pincodes (e.g. 411033,411001):{\" \"}\n        <input\n          style={{ width: 400 }}\n          type=\"text\"\n          value={state.pincodeTextField}\n          onChange={onPincodeChange}\n        />\n        <br />\n        <span>\n          Your entered pincodes:{\" \"}\n          {state.pincodeToFilter.length\n            ? state.pincodeToFilter.join(\", \")\n            : \"nothing\"}\n        </span>\n        <br />\n        <span>(Note: only valid pincodes are considered. If no pincodes are entered then it will show results of all pincodes.)</span>\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { VaccineDataContext } from \"./VaccineDataContext\";\n\nexport const DateField = () => {\n  const { state, setState } = React.useContext(VaccineDataContext);\n\n  const onDateChange = (e) => {\n    setState({ startDate: e.target.value });\n  };\n\n  return (\n    <input\n      type=\"text\"\n      id=\"date\"\n      name=\"date\"\n      value={state.startDate}\n      onChange={onDateChange}\n      style={{ width: 80 }}\n    />\n  );\n};\n","import React from \"react\";\nimport { VaccineDataContext } from \"./VaccineDataContext\";\n\nexport const VaccineSlots = () => {\n  const { state, setState } = React.useContext(VaccineDataContext);\n\n  const {\n    slots,\n    startMonitoring,\n    isFetching,\n    countdown,\n    lastChecked,\n    isError,\n  } = state;\n\n  const onStartMonitoring = () => {\n    setState({ startMonitoring: !startMonitoring });\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={onStartMonitoring}>\n        <span>{startMonitoring ? \"Stop\" : \"Start Monitoring\"}</span>\n      </button>\n\n      {isFetching ? (\n        <p>'Checking slots...'</p>\n      ) : startMonitoring ? (\n        <p>\n          {lastChecked && (\n            <span>\n              Last checked at {lastChecked} <br />\n            </span>\n          )}\n          Checking again in: {countdown} seconds\n        </p>\n      ) : (\n        <p></p>\n      )}\n\n      {!isError && slots.length > 0 ? (\n        <ul>\n          {slots.map((slot, i) => {\n            return slot?.sessions.map((session, i) => {\n              return (\n                <li key={i}>\n                  <span style={{ color: \"#0000ff\" }}>\n                    {session.date} {session.name}, {session.block_name},{\" \"}\n                    {session.district_name}, {session.pincode},{\" \"}\n                  </span>\n                  <span>{session.vaccine}</span> -{\" \"}\n                  <span style={{ color: \"#ff0080\" }}>\n                    {session.available_capacity} slots\n                  </span>{\" \"}\n                  <span style={{ color: \"#00cc00\" }}>\n                    (Age limit {session.min_age_limit})\n                  </span>\n                </li>\n              );\n            });\n          })}\n        </ul>\n      ) : (\n        <p>\n          {isError ? (\n            <b style={{ color: \"#ff0000\" }}>Error fetching slots retrying...</b>\n          ) : (\n            <b style={{ color: \"#ff0080\" }}>No open slots are available.</b>\n          )}\n        </p>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Beep } from \"./Beep\";\nimport { CityDropdown } from \"./CityDropdown\";\nimport { DateField } from \"./DateField\";\nimport \"./styles.css\";\nimport { VaccineProvider } from \"./VaccineDataContext\";\nimport { VaccineSlots } from \"./VaccineSlots\";\n\nexport default function App() {\n  return (\n    <VaccineProvider>\n      <div>\n        <p>\n          Inspired by{\" \"}\n          <a target=\"_blank\" href=\"https://pranavmehta.github.io/1844vaccine/\">\n            https://pranavmehta.github.io/1844vaccine/\n          </a>\n          <br />\n          <sub>This is re-written in reactjs just for fun ♥️</sub>\n        </p>\n        <h1>Cowin open slot alert for 18-44 age group</h1>\n        <p style={{ maxWidth: 600 }}>\n          This bot periodically checks the Cowin portal for available\n          vaccination slots for the 18-44 age group every 60 seconds and alerts\n          with an audible beep if an open slot is found.\n        </p>\n         <p>To use this bot,</p>\n        <ul>\n          <li>select one or more cities,</li>\n          <li>click \"Start monitoring\"</li>\n          <li>keep it running in a browser tab</li>\n        </ul>\n        <p>\n          Start date: <DateField /> (dd-mm-yyyy, checks for upto 7 days from\n          this date)\n        </p>\n        <CityDropdown />\n        <Beep />\n        <VaccineSlots />\n      </div>\n    </VaccineProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}